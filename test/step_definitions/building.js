const page = require('../page/building')
const translation = require("../../public/locales/vi/translation.json");
const { faker } = require('@faker-js/faker');
const { I } = inject()

Given('Go to Login', () => page.goToLogin())
Then('Fill Email', () => page.fillValueEmail())
Then('Fill Password', () => page.fillValuePassword())
Then('Submit', () => page.submitFormLogin())
Then('Go to building page', () => page.gotoBuildingPage())
Then('Display notification successfully', () => page.displayNotificationSuccessfully())
Then('I change page register successfully', () => page.checkIsPageRegister())
Then('Display notification failed', () => page.displayNotificationFailed())
Then('Display 1 error validation message', () => page.displayLengthErrorValidationMessage(1))
Then('Display 2 error validation message', () => page.displayLengthErrorValidationMessage(2))
Then('Display 3 error validation message', () => page.displayLengthErrorValidationMessage(3))
Then('Display 4 error validation message', () => page.displayLengthErrorValidationMessage(4))
Then('Display 5 error validation message', () => page.displayLengthErrorValidationMessage(5))
Then('Display 6 error validation message', () => page.displayLengthErrorValidationMessage(6))
Then('Display 7 error validation message', () => page.displayLengthErrorValidationMessage(7))
Then('Display 8 error validation message', () => page.displayLengthErrorValidationMessage(8))

When('AED_B_01 Add Building successfully with building type is "Nhà trọ"', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  I.wait(1)
  page.gotoBuildingPage()
  I.wait(4)

  page.clickButtonAddNew()
  page.fillValueNameBuilding()
  page.fillValueTypeBuilding(translation.columns.admin.buildingInfo.Motel)
  page.fillValueAddressBuilding()
  page.clickButtonAddSaveNewBuilding()
  page.displayNotificationSuccessfully()
})
When('AED_B_02 Add Building successfully with building type is "Khách sạn"', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonAddNew()
  page.fillValueNameBuilding()
  page.fillValueTypeBuilding(translation.columns.admin.buildingInfo.Hotel)
  page.fillValueAddressBuilding()
  page.clickButtonAddSaveNewBuilding()
  page.displayNotificationSuccessfully()
})
When('AED_B_03 Add Building successfully with building type is "Căn hộ dịch vụ"', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonAddNew()
  page.fillValueNameBuilding()
  page.fillValueTypeBuilding(translation.columns.admin.buildingInfo.CHDV)
  page.fillValueAddressBuilding()
  page.clickButtonAddSaveNewBuilding()
  page.displayNotificationSuccessfully()
})
When('AED_B_04 Edit Building successfully when changing building name', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonEditFirstBuilding()
  page.fillValueNameBuilding('toa nha bitesco')
  page.fillValueTypeBuilding(translation.columns.admin.buildingInfo.CHDV)
  page.fillValueAddressBuilding()
  page.clickButtonAddSaveNewBuilding()
  page.displayNotificationSuccessfully()
})
When('AED_B_05 Edit Building successfully when changing building type', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonEditFirstBuilding()
  page.fillValueNameBuilding()
  page.fillValueTypeBuilding(translation.columns.admin.buildingInfo.Hotel)
  page.fillValueAddressBuilding()
  page.clickButtonAddSaveNewBuilding()
  page.displayNotificationSuccessfully()
})
When('AED_B_06 Edit Building successfully when changing building address', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonEditFirstBuilding()
  page.fillValueNameBuilding()
  page.fillValueTypeBuilding(translation.columns.admin.buildingInfo.CHDV)
  page.fillValueAddressBuilding('trung chanh hoc mon')
  page.clickButtonAddSaveNewBuilding()
  page.displayNotificationSuccessfully()
})
When('AED_B_07 Check successful message when Delete Building successfully', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonDeleteFirstBuilding()
  page.clickButtonAcceptDelete()
  page.displayNotificationSuccessfully()
})
When('AED_B_08 Check validation text when add building with all fields are empty', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonAddNew()
  page.clickButtonAddSaveNewBuilding()
  page.displayLengthErrorValidationMessage(3)
})
When('AED_B_09 Check validation text of "Tên tòa nhà" when add building with empty "Tên tòa nhà"', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonAddNew()
  page.fillValueTypeBuilding(translation.columns.admin.buildingInfo.Hotel)
  page.fillValueAddressBuilding()
  page.clickButtonAddSaveNewBuilding()
  page.displayLengthErrorValidationMessage(1)
})
When('AED_B_10 Check validation text of "Loại hình" when add building with empty "Loại hình"', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonAddNew()
  page.fillValueNameBuilding()
  page.fillValueAddressBuilding()
  page.clickButtonAddSaveNewBuilding()
  page.displayLengthErrorValidationMessage(1)
})
When('AED_B_11 Check validation text of "Địa chỉ tòa nhà" when add building with empty "Địa chỉ tòa nhà"', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonAddNew()
  page.fillValueNameBuilding()
  page.fillValueTypeBuilding(translation.columns.admin.buildingInfo.Hotel)
  page.clickButtonAddSaveNewBuilding()
  page.displayLengthErrorValidationMessage(1)
})
When('AED_B_12 Check validation text when edit building with all fields are empty', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonEditFirstBuilding()

  page.clickButtonAddSaveNewBuilding()
})

When('AED_B_13 Check validation text of "Tên tòa nhà" when edit building with empty "Tên tòa nhà"', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonEditFirstBuilding()
  page.fillValueTypeBuilding(translation.columns.admin.buildingInfo.Hotel)
  page.fillValueAddressBuilding()
  page.clickButtonAddSaveNewBuilding()
})
When('AED_B_14 Check validation text of "Loại hình" when edit building with empty "Loại hình"', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonEditFirstBuilding()
  page.fillValueNameBuilding()
  page.fillValueAddressBuilding()
  page.clickButtonAddSaveNewBuilding()
})
When('AED_B_15 Check validation text of "Địa chỉ tòa nhà" when edit building with empty "Địa chỉ tòa nhà"', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonEditFirstBuilding()
  page.fillValueNameBuilding()
  page.fillValueTypeBuilding(translation.columns.admin.buildingInfo.Hotel)
  page.fillValueAddressBuilding('')
  page.clickButtonAddSaveNewBuilding()
})
When('AED_B_16 Delete Building unsuccessfully when click "Hủy bỏ" button', () => {
  page.goToLogin()
  page.fillValueEmail()
  page.fillValuePassword()
  page.submitFormLogin()
  page.gotoBuildingPage()
  page.clickButtonDeleteFirstBuilding()
  page.clickButtonCancelDelete()
  page.displayNotificationSuccessfully()
})




